/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    ListNode* solve(ListNode* l1,ListNode* l2,int carry)
    {
        if(l1==NULL && l2==NULL && carry==0){
            return NULL;
        }
        ListNode* head=NULL;
        int value=carry;
        if(l1!=NULL)
        {
            value+=l1->val;
        }
        if(l2!=NULL)
        {
            value+=l2->val;
        }
        head = new ListNode(value%10);
        if(l1!=NULL || l2!=NULL)
        {
            ListNode* node=solve(l1==NULL?NULL:l1->next,l2==NULL?NULL:l2->next,value>=10?1:0);
             head->next=node;
        }
       return head;
        
    }
    
    
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
       return solve(l1,l2,0);
    }
};